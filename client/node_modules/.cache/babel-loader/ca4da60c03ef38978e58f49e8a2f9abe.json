{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/contooter/Documents/Projects/TestMinterDrizzle/client/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      drizzleState: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"Welcome to React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/contooter/Documents/Projects/TestMinterDrizzle/client/src/App.js"],"names":["Component","App","state","loading","drizzleState","componentDidMount","drizzle","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","render"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;;AAGA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BE,KAF0B,GAElB;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KAFkB;AAAA;;AAI1BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB,CADkB,CAGlB;;AACA,SAAKC,WAAL,GAAmBF,OAAO,CAACG,KAAR,CAAcC,SAAd,CAAwB,MAAM;AAE/C;AACA,YAAMN,YAAY,GAAGE,OAAO,CAACG,KAAR,CAAcE,QAAd,EAArB,CAH+C,CAK/C;;AACA,UAAIP,YAAY,CAACQ,aAAb,CAA2BC,WAA/B,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AAAEX,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA;AAAlB,SAAd;AACD;AACF,KATkB,CAAnB;AAUD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1ByB;;AA6B5B,eAAed,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\n\n\nclass App extends Component {\n\n  state = { loading: true, drizzleState: null };\n  \n  componentDidMount() {\n    const { drizzle } = this.props;\n  \n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n  \n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n  \n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n          <h1 className=\"App-title\">Welcome to React</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}