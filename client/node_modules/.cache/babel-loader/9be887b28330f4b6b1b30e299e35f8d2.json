{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/contooter/Documents/Projects/TestMinterDrizzle/client/src/ReadBalance.js\";\nimport React from \"react\";\n\nclass ReadDecimals extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKey: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.TestMinter;\n    const dataKey = contract.methods[\"decimals\"].cacheCall();\n    this.setState({\n      dataKey\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      TestMinter\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const decimals = MyStringStore.myString[this.state.dataKey]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"My stored string: \", myString && myString.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default ReadBalance;","map":{"version":3,"sources":["/home/contooter/Documents/Projects/TestMinterDrizzle/client/src/ReadBalance.js"],"names":["React","ReadDecimals","Component","state","dataKey","componentDidMount","drizzle","drizzleState","props","contract","contracts","TestMinter","methods","cacheCall","setState","render","decimals","MyStringStore","myString","value","ReadBalance"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADiC;AAAA;;AAIzCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKC,KAAvC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,SAAR,CAAkBC,UAAnC;AACA,UAAMP,OAAO,GAAGK,QAAQ,CAACG,OAAT,CAAiB,UAAjB,EAA6BC,SAA7B,EAAhB;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAiB,KAAKH,KAAL,CAAWD,YAAX,CAAwBG,SAA/C,CAFO,CAIP;;AACA,UAAMM,QAAQ,GAAGC,aAAa,CAACC,QAAd,CAAuB,KAAKf,KAAL,CAAWC,OAAlC,CAAjB,CALO,CAOP;;AACA,wBAAO;AAAA,uCAAsBc,QAAQ,IAAIA,QAAQ,CAACC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AApBwC;;AAuB3C,eAAeC,WAAf","sourcesContent":["import React from \"react\";\n\nclass ReadDecimals extends React.Component {\n  state = { dataKey: null };\n\n\n  componentDidMount() {\n    const { drizzle, drizzleState } = this.props;\n    const contract = drizzle.contracts.TestMinter;\n    const dataKey = contract.methods[\"decimals\"].cacheCall();\n    this.setState({ dataKey });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const { TestMinter } = this.props.drizzleState.contracts;\n\n    // using the saved `dataKey`, get the variable we're interested in\n    const decimals = MyStringStore.myString[this.state.dataKey];\n\n    // if it exists, then we display its value\n    return <p>My stored string: {myString && myString.value}</p>;\n  }\n}\n\nexport default ReadBalance;"]},"metadata":{},"sourceType":"module"}