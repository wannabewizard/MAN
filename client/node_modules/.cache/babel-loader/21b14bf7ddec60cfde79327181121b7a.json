{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _classCallCheck from\"/home/contooter/Documents/Projects/MAN2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/contooter/Documents/Projects/MAN2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/contooter/Documents/Projects/MAN2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/contooter/Documents/Projects/MAN2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";var ReadBalance=/*#__PURE__*/function(_React$Component){_inherits(ReadBalance,_React$Component);var _super=_createSuper(ReadBalance);function ReadBalance(){var _this;_classCallCheck(this,ReadBalance);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={dataKey:null};return _this;}_createClass(ReadBalance,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props=this.props,drizzle=_this$props.drizzle,drizzleState=_this$props.drizzleState;var contract=drizzle.contracts.TestMinter;var dataKey=contract.methods[\"balanceOf\"].cacheCall(drizzleState.accounts[0]);this.setState({dataKey:dataKey});}},{key:\"render\",value:function render(){// get the contract state from drizzleState\nvar TestMinter=this.props.drizzleState.contracts.TestMinter;// using the saved `dataKey`, get the variable we're interested in\nvar balanceOf=TestMinter.balanceOf[this.state.dataKey];// if it exists, then we display its value\nreturn/*#__PURE__*/_jsxs(\"p\",{children:[\"Your MAN balance is: \",(balanceOf&&balanceOf.value)/1000000000000000000]});}}]);return ReadBalance;}(React.Component);export default ReadBalance;","map":{"version":3,"sources":["/home/contooter/Documents/Projects/MAN2/client/src/ReadBalance.js"],"names":["React","ReadBalance","state","dataKey","props","drizzle","drizzleState","contract","contracts","TestMinter","methods","cacheCall","accounts","setState","balanceOf","value","Component"],"mappings":"irBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,W,2VACJC,K,CAAQ,CAAEC,OAAO,CAAE,IAAX,C,oGAGY,iBACgB,KAAKC,KADrB,CACVC,OADU,aACVA,OADU,CACDC,YADC,aACDA,YADC,CAElB,GAAMC,CAAAA,QAAQ,CAAGF,OAAO,CAACG,SAAR,CAAkBC,UAAnC,CACA,GAAMN,CAAAA,OAAO,CAAGI,QAAQ,CAACG,OAAT,CAAiB,WAAjB,EAA8BC,SAA9B,CAAwCL,YAAY,CAACM,QAAb,CAAsB,CAAtB,CAAxC,CAAhB,CACA,KAAKC,QAAL,CAAc,CAAEV,OAAO,CAAPA,OAAF,CAAd,EACD,C,uCAEQ,CACP;AADO,GAECM,CAAAA,UAFD,CAEgB,KAAKL,KAAL,CAAWE,YAAX,CAAwBE,SAFxC,CAECC,UAFD,CAIP;AACA,GAAMK,CAAAA,SAAS,CAAGL,UAAU,CAACK,SAAX,CAAqB,KAAKZ,KAAL,CAAWC,OAAhC,CAAlB,CAEA;AACA,mBAAO,6CAAyB,CAACW,SAAS,EAAIA,SAAS,CAACC,KAAxB,EAA+B,mBAAxD,GAAP,CACD,C,yBApBuBf,KAAK,CAACgB,S,EAuBhC,cAAef,CAAAA,WAAf","sourcesContent":["import React from \"react\";\n\nclass ReadBalance extends React.Component {\n  state = { dataKey: null };\n\n\n  componentDidMount() {\n    const { drizzle, drizzleState } = this.props;\n    const contract = drizzle.contracts.TestMinter;\n    const dataKey = contract.methods[\"balanceOf\"].cacheCall(drizzleState.accounts[0]);\n    this.setState({ dataKey });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const { TestMinter } = this.props.drizzleState.contracts;\n\n    // using the saved `dataKey`, get the variable we're interested in\n    const balanceOf = TestMinter.balanceOf[this.state.dataKey];\n\n    // if it exists, then we display its value\n    return <p>Your MAN balance is: {(balanceOf && balanceOf.value)/1000000000000000000}</p>;\n  }\n}\n\nexport default ReadBalance;      "]},"metadata":{},"sourceType":"module"}